#!/usr/bin/env bash

PUBLISH=1
while [[ $# -gt 0 ]]
do
    key="$1"
    case $key in
    -d|--dry-run)
        PUBLISH=0
        shift
        shift
        ;;
    esac
done

errors=0
# Ensure changes are committed
git status &>/dev/null
if [[ $? -ne 0 ]]; then
	echo "Error: Make sure working tree is clean before publishing"
	errors=1
fi

# Ensure user is publishing from master branch
# if [[ "$(git rev-parse --abbrev-ref HEAD)" != "master" ]] && [[ $PUBLISH -eq 1 ]]; then
# 	echo "Error: Can only publish from \"master\" branch"
# 	errors=1
# fi

if [[ $errors -eq 1 ]]; then
    echo "Aborting due to error"
    exit 1
fi
echo "Publishing..."

echo "Making sure local branch is up to date..."
git pull
git status &>/dev/null
if [[ $? -ne 0 ]]; then
	echo "Error: Fast-Forward failed. Fix any conflicts and publish again"
	exit 1
fi

echo "Creating temporary branch..."
git checkout -b gh-pages

echo "Generating static files..."
python3 freezer.py
if [[ $? -ne 0 ]]; then
	echo "Failed to build, have you setup the environment?"
	echo "Removing temporary branch..."
	git checkout -
	git branch -D gh-pages
	exit 1
fi

echo "Moving static files..."
cp -r website/build/* .
cp -r website/other/* .

# if [[ $PUBLISH -eq 1 ]]; then
#     echo "Sending files to remote..."
#     git add --all
#     git commit -q -m "Publish $(date +%Y-%m-%d)" --no-gpg-sign
#     git push -q -f --set-upstream origin gh-pages
# 
#     echo "Removing temporary branch..."
#     git checkout -
#     git branch -D gh-pages
# 
#     echo "Done publishing"
# else
#     echo "Skipping push"
# fi
